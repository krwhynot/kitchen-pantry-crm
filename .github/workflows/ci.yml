name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Check package.json files
      run: |
        if [ -f "package.json" ]; then
          echo "‚úÖ Root package.json exists"
        else
          echo "‚ùå Root package.json missing"
          exit 1
        fi
        
        if [ -f "backend/package.json" ]; then
          echo "‚úÖ Backend package.json exists"
        else
          echo "‚ö†Ô∏è Backend package.json missing (development in progress)"
        fi
    
    - name: Validate project structure
      run: |
        echo "üìÅ Project structure:"
        ls -la
        echo ""
        echo "üìÅ Backend structure:"
        if [ -d "backend" ]; then
          ls -la backend/
        else
          echo "Backend directory not found"
        fi
        echo ""
        echo "üìÅ Frontend structure:"
        if [ -d "frontend" ]; then
          ls -la frontend/
        else
          echo "Frontend directory not found"
        fi
    
    - name: Run linter (if available)
      run: |
        if command -v pnpm lint &> /dev/null; then
          pnpm lint
        else
          echo "‚ö†Ô∏è Linter not configured yet"
        fi
      continue-on-error: true
    
    - name: Run type check (if available)
      run: |
        if command -v pnpm type-check &> /dev/null; then
          pnpm type-check
        else
          echo "‚ö†Ô∏è Type checking not configured yet"
        fi
      continue-on-error: true
    
    - name: Run tests (if available)
      run: |
        if command -v pnpm test &> /dev/null; then
          pnpm test
        else
          echo "‚ö†Ô∏è Tests not configured yet"
        fi
      continue-on-error: true
    
    - name: Build project (if available)
      run: |
        if command -v pnpm build &> /dev/null; then
          pnpm build
        else
          echo "‚ö†Ô∏è Build not configured yet"
        fi
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Run security audit (if available)
      run: |
        if command -v pnpm audit &> /dev/null; then
          pnpm audit --audit-level moderate
        else
          echo "‚ö†Ô∏è Security audit not available yet"
        fi
      continue-on-error: true
    
    - name: Check for sensitive files
      run: |
        echo "üîç Checking for sensitive files..."
        if find . -name "*.env" -not -path "./node_modules/*" | grep -q .; then
          echo "‚ùå Environment files found in repository"
          find . -name "*.env" -not -path "./node_modules/*"
          exit 1
        fi
        
        if find . -name "*.key" -not -path "./node_modules/*" | grep -q .; then
          echo "‚ùå Key files found in repository"
          find . -name "*.key" -not -path "./node_modules/*"
          exit 1
        fi
        
        echo "‚úÖ No sensitive files found"
    
    - name: CodeQL Analysis (if TypeScript files exist)
      uses: github/codeql-action/init@v3
      if: success()
      with:
        languages: javascript
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      if: success()
      continue-on-error: true